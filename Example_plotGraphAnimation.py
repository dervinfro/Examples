import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import math


fig = plt.figure()
ax = fig.add_subplot(1,1,1)
x_val = 0
master = [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], 	 
[0.9525009553569058, 0.3611539825098589, 0.28331593826180324, 0.23364993560826405, 0.198425100093397, 0.17144074358880365, 0.1498579085067225, 0.13427931881335098, 0.12045011434762273, 0.10887047255799795, 0.10118275571090635, 0.09313641449417143, 0.08582865445879483, 0.07845013053636649, 0.07304709979289328, 0.06811594412846413, 0.06448416726537592, 0.058927077959791255, 0.056024578682651434, 0.052379161198841756, 0.049734628723005395, 0.0463727131444466, 0.04545437070938836, 0.04248232792456596, 0.0384545924034804],
[0.3797867627069354, 0.2854730906399588, 0.2358283791442712, 0.20013425419417522, 0.1727908934171622, 0.15428448349082222, 0.1435300263762474, 0.1293915616433757, 0.12256996350285286, 0.11245708297588862, 0.10550700357571866, 0.1014612968180639, 0.09843346042015279, 0.09536143352956666, 0.09096035582265662, 0.08986666877152553, 0.08625361077147924, 0.08561320084729232, 0.08266367241332773, 0.08147829668887425, 0.07924495932180435, 0.08029465615501977, 0.08016336050626706, 0.07641769408840143, 0.07569344692412415]]
z_values = []
log_z_values = []
epoch_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
train_loss_list = [0.9525009553569058, 0.3611539825098589, 0.28331593826180324, 0.23364993560826405, 0.198425100093397, 0.17144074358880365, 0.1498579085067225, 0.13427931881335098, 0.12045011434762273, 0.10887047255799795, 0.10118275571090635, 0.09313641449417143, 0.08582865445879483, 0.07845013053636649, 0.07304709979289328, 0.06811594412846413, 0.06448416726537592, 0.058927077959791255, 0.056024578682651434, 0.052379161198841756, 0.049734628723005395, 0.0463727131444466, 0.04545437070938836, 0.04248232792456596, 0.0384545924034804]
valid_loss_list = [0.3797867627069354, 0.2854730906399588, 0.2358283791442712, 0.20013425419417522, 0.1727908934171622, 0.15428448349082222, 0.1435300263762474, 0.1293915616433757, 0.12256996350285286, 0.11245708297588862, 0.10550700357571866, 0.1014612968180639, 0.09843346042015279, 0.09536143352956666, 0.09096035582265662, 0.08986666877152553, 0.08625361077147924, 0.08561320084729232, 0.08266367241332773, 0.08147829668887425, 0.07924495932180435, 0.08029465615501977, 0.08016336050626706, 0.07641769408840143, 0.07569344692412415]

frame_num = 15 #used to test out the frames parameter in FuncAnimation
#####################
#Animation with loop#
#####################
#for i in range(25):
##	plt.cla() #clear axis
#	z=i+1 #step integer in loop
#	z_values.append(z) #append z values (X axis)
#	log_z_values.append(math.log(z)) #append log z values (y axies)
#	ax.plot(z_values, log_z_values, linewidth=1, marker='o', color='blue') #plot
#	ax.set_xlim(1,25)
#	plt.pause(0.4) #.4 second pause
##print(type(z_values), type(log_z_values))
#plt.show() #this keeps the plot window open after the loop has been displayed

for i in range(25):
	ax.plot(epoch_list[i], train_loss_list[i], marker='o')
	ax.set_xlim(0,25)
	ax.set_ylim(0,2)
	plt.pause(0.2)
	
plt.show()


#def animate(i):
##	ax.clear()
#	ax.plot(epoch_list[i], train_loss_list[i], marker='o', color='blue')
#	ax.set_xlim(0,25)
#	ax.set_ylim(0,1)
#
#	
##def animate(i):
##	z_values.append(i + 1)
##	log_z_values.append(math.log(i + 1))
##	ax.clear()
##	ax.plot(z_values, log_z_values, marker='o')
##	ax.set_ylim(0,2)
##	ax.set_xlim(0,30)
#	
#ani = animation.FuncAnimation(fig, animate, interval=1000)
#plt.show()

